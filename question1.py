#!/usr/bin/python
# -*- coding: utf-8 -*-
'''
@author: li
'''
import numpy as np

# nodeA, B, C, D, E, F, G, H
A = [[0, 1, 1, 1, 0, 1, 1, 0],
     [1, 0, 1, 1, 0, 0, 0, 0],
     [1, 1, 0, 1, 0, 0, 0, 0],
     [1, 1, 1, 0, 0, 0, 0, 0],
     [0, 0, 0, 0, 0, 1, 1, 0],
     [1, 0, 0, 0, 1, 0, 1, 0],
     [1, 0, 0, 0, 1, 1, 0, 1],
     [0, 0, 0, 0, 0, 0, 1, 0]]

A = np.array(A)

D = [[5, 0, 0, 0, 0, 0, 0, 0],
     [0, 3, 0, 0, 0, 0, 0, 0],
     [0, 0, 3, 0, 0, 0, 0, 0],
     [0, 0, 0, 3, 0, 0, 0, 0],
     [0, 0, 0, 0, 2, 0, 0, 0],
     [0, 0, 0, 0, 0, 3, 0, 0],
     [0, 0, 0, 0, 0, 0, 4, 0],
     [0, 0, 0, 0, 0, 0, 0, 1]]

D = np.array(D)

S = [1, 1, 1, 1, -1, -1, -1, -1]

m = 12
Q = 0
for i in range(8):
    for j in range(8):
        Q += (A[i, j] - D[i, i]*D[j, j]/ (2 * m))* (S[i]*S[j])
Q = Q/(4 * m)

print(Q)